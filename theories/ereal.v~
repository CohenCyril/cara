From mathcomp Require Import all_ssreflect all_algebra.
Require Import boolp.

Set Implicit Arguments.
Unset Strict Implicit.
Unset Printing Implicit Defensive.

Import Order.TTheory Order.Def Order.Syntax GRing.Theory Num.Def Num.Theory.

Section ExtendedReals.
Variable (R : realDomainType).

Inductive er := ERFin of R | ERPInf | ERNInf.

Coercion real_of_er (x : er) :=
  if x is ERFin v then v else 0%R.
End ExtendedReals.

Notation "\+inf" := (@ERPInf _).
Notation "\-inf" := (@ERNInf _).
Notation "x %:E" := (@ERFin _ x) (at level 2, format "x %:E").

Notation "{ 'ereal' R }" := (er R) (format "{ 'ereal'  R }").

Bind    Scope ereal_scope with er.
Delimit Scope ereal_scope with E.
